import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class solution {
	public static String checkWords(Map<String, Integer> magazineWords, Map<String, Integer> ransomWords){
		for(Map.Entry<String, Integer> entry : ransomWords.entrySet()){ // loops through all the ransomWrods
        	if(magazineWords.containsKey(entry.getKey())){ // check to see if the key is in the magazine words
        		if(magazineWords.get(entry.getKey()).intValue() < 
        				ransomWords.get(entry.getKey()).intValue()){// check to see if the are enough of the words in the magazine
        					return ("No");
        		}
        	}
        	else
        		return ("No");
        }
        return ("Yes");
	}

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m = in.nextInt();
        int n = in.nextInt();
        // put in hashtable instead
        Map<String, Integer> magazineWords = new Hashtable<String,Integer>();
        String temp;
        for(int magazine_i=0; magazine_i < m; magazine_i++){
        	temp = in.next();
           if(magazineWords.containsKey(temp)){ // if the key is already in our table
               magazineWords.put(temp, magazineWords.getOrDefault(temp, 0)+1); // puts the updated value in our table
           }
           else // the key isn't in our table
              magazineWords.put(temp, 1); // creates a key pair and starts it value at 1
        }
        
        Map<String, Integer> ransomWords = new Hashtable<String,Integer>();
        for(int ransom_i=0; ransom_i < n; ransom_i++){
        	temp = in.next();
            if(ransomWords.containsKey(temp)){ // if the key is already in our table    	  
         	      ransomWords.put(temp, ransomWords.getOrDefault(temp, 0)+1); // puts the updated value in our table
            }
            else // the key isn't in our table
            	  ransomWords.put(temp, 1); // creates a key pair and starts it value at 1
        }
        System.out.print(checkWords(magazineWords, ransomWords));
        
        in.close();
    }
}
